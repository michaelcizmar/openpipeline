<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.openpipeline</groupId>
	<artifactId>openpipeline</artifactId>
	<name>OpenPipeline</name>
	<version>0.9.2-SNAPSHOT</version>
	<url>http://openpipeline.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<build>
		<plugins>
		
			<!-- we need to lock in version 2.4.3+ of this plugin because 2.4 is buggy -->
		    <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>2.4.3</version>
            </plugin>
		
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
						
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Built-By></Built-By>
						</manifestEntries>
						<manifestFile />
					</archive>
				</configuration>
			</plugin>

			<!--  This plugin deletes the lib dir populated by the dependency plugin below. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>target/lib</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>

					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>compile</includeScope>
							<excludeGroupIds>commons-logging</excludeGroupIds>
							<outputDirectory>target/lib</outputDirectory>
						</configuration> 
			  		</execution>
				
					<!-- the code below attempts to put jetty in
					     their own subdirs. It doesn't yet work, because it
					     doesn't handle transitives properly.
					<execution>
						<id>jetty</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>org.mortbay.jetty</includeGroupIds>
							<outputDirectory>target/lib/jetty</outputDirectory>
						</configuration> 
			  		</execution>
					<execution>
						<id>the_rest</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeGroupIds>org.mortbay.jetty,com.sun.xml.ws</excludeGroupIds>
							<includeScope>compile</includeScope>
							<outputDirectory>target/lib</outputDirectory>
						</configuration> 
			  		</execution>
			  		-->

			  	</executions>
			</plugin>
			

			<!--
				This ant plugin does all the things that maven can't handle, like
				proper javadoc and creating the release
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>ant_stuff</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<property name="compile_classpath" refid="maven.compile.classpath" />
								<property name="runtime_classpath" refid="maven.runtime.classpath" />
								<property name="test_classpath" refid="maven.test.classpath" />
								<property name="plugin_classpath" refid="maven.plugin.classpath" />

								<property name="artifactId" value="${project.artifactId}" />
								<property name="maven_version" value="${project.version}" />

								<ant antfile="${basedir}/build.xml" inheritAll="true"
									inheritRefs="true">
									<target name="all" />
								</ant>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
	
	<dependencies>

		<!-- Logging. The system mostly uses slf4j, but we have to drop into the
		 	 underlying logging implementation, logback, to do a few things.
		 	 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency> <!-- this redirects commons logging to slf4j -->
    		<groupId>org.slf4j</groupId>
    		<artifactId>jcl-over-slf4j</artifactId>
    		<version>1.6.1</version>
		</dependency>
		<dependency> <!-- this redirects log4j to slf4j -->
    		<groupId>org.slf4j</groupId>
    		<artifactId>log4j-over-slf4j</artifactId>
    		<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>0.9.26</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.26</version>
		</dependency>

		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.4</version>
		</dependency>
		
		<!-- StAX implementation. Cannot use the one built into JDK 1.6 because of bug #6440214 -->
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>woodstox-core-asl</artifactId>
			<version>4.0.9</version>
		</dependency>
		
		<!-- jetty dependencies. must list all, unfortunately -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.25</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-java5-threadpool</artifactId>
			<version>6.1.25</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-api-2.1-glassfish</artifactId>
			<version>9.1.1.B60.25.p2</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1-glassfish</artifactId>
			<version>9.1.1.B60.25.p2</version>
			<exclusions>
				<exclusion>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency> 

		<!-- used by the web crawler -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.0.2</version>
		</dependency>

		<!-- 
		Used only by the optional Derby LinkQueue and nowhere else.
		JDK 1.6 ships with Derby (Java DB) included, but it's an optional
		install, so this dependency makes sure that it's present.
		 -->
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.6.2.1</version>
		</dependency>

		<!-- used only by the optional MySQL LinkQueue and nowhere else.
			 this is test scope because we can't distribute the mysql
			 library because the license is not commercial-friendly. 
		-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.13</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Amazon SDK. Used for the S3 connector and for the S3 uploader stage -->
		<dependency>
    		<groupId>com.amazonaws</groupId>
    		<artifactId>aws-java-sdk</artifactId>
    		<version>1.1.4</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		
		<!-- build scope only -->
		<dependency>
			<groupId>org.tmatesoft.svnkit</groupId>
			<artifactId>svnkit</artifactId>
			<version>1.3.4</version>
			<scope>test</scope>
		</dependency>
				
  	</dependencies>
	<reporting />
</project>